import unittest
import tempSmart
from tempSmart import portscan
from tempSmart import thread
from unittest.mock import patch

#the patch decorator creats a mock class
#It pulls the object from the other side and creates a mock object to test
@patch('tempSmart.thread')
@patch('tempSmart.portscan')

class TestMock4(unittest.TestCase):
	
	def test(self, MockClass1, MockClass2): #Create the mock test class, pass 3 positional arguments
		tempSmart.portscan()
		tempSmart.thread()
		assert MockClass1 is tempSmart.portscan
		assert MockClass2 is tempSmart.thread
		self.assertTrue(MockClass1.called)
		self.assertTrue(MockClass2.called)
		
if __name__ == '__main__':
	unittest.main()
